filetype txt;

stage SORT_ITEMS(
    in  txt  unsorted,
    in  bool case_sensitive,
    out txt  sorted,
    src py   "stages/sort",
)

stage FIND_DUPLICATES(
    in  txt  sorted,
    out txt  duplicates,
    src py   "stages/find_duplicates",
)

pipeline DUPLICATE_FINDER(
    in  txt  unsorted,
    out txt  duplicates,
)
{
    call SORT_ITEMS(
        unsorted = self.unsorted,
    )
    call FIND_DUPLICATES(
        sorted = SORT_ITEMS.sorted,
    )
    return (
        duplicates = FIND_DUPLICATES.duplicates,
    )
}

pipeline RETURNS_WILD(
    in  STRUCT_CONSUMER          input,
    in  int                      x,
    out int                      x,
    out map<STRUCT_CONSUMER>     flat_map,
    out map<STRUCT_CONSUMER>[]   array_of_map,
    out map<STRUCT_CONSUMER[]>   map_of_array,
    out map<STRUCT_CONSUMER[]>[] array_of_map_of_array,
    out STRUCT_CONSUMER[]        array "some help" "new_name.out",
)
{
    call MAP_PRODUCER(
        * = self,
    )

    return (
        x = self.x,
        * = MAP_PRODUCER,
    )
}
