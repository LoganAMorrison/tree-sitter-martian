================================================================================
Pipeline
================================================================================

filetype txt;

stage SORT_ITEMS(
    in  txt  unsorted,
    in  bool case_sensitive,
    out txt  sorted,
    src py   "stages/sort",
)

stage FIND_DUPLICATES(
    in  txt  sorted,
    out txt  duplicates,
    src py   "stages/find_duplicates",
)

pipeline DUPLICATE_FINDER(
    in  txt  unsorted,
    out txt  duplicates,
)
{
    call SORT_ITEMS(
        unsorted = self.unsorted,
    )
    call FIND_DUPLICATES(
        sorted = SORT_ITEMS.sorted,
    )
    return (
        duplicates = FIND_DUPLICATES.duplicates,
    )
}

--------------------------------------------------------------------------------

(source_file
  (filetype_declaration
    filetype: (identifier))
  (stage_declaration
    name: (identifier)
    (stage_body
      (parameter_list
        (in_param
          type: (parameter_type
            (identifier))
          name: (identifier))
        (in_param
          type: (parameter_type
            (primitive_type))
          name: (identifier))
        (out_param
          type: (parameter_type
            (identifier))
          name: (identifier)))
      (src_stm
        type: (src_lang)
        source_path: (string))))
  (stage_declaration
    name: (identifier)
    (stage_body
      (parameter_list
        (in_param
          type: (parameter_type
            (identifier))
          name: (identifier))
        (out_param
          type: (parameter_type
            (identifier))
          name: (identifier)))
      (src_stm
        type: (src_lang)
        source_path: (string))))
  (pipeline_declaration
    name: (identifier)
    parameters: (parameter_list
      (in_param
        type: (parameter_type
          (identifier))
        name: (identifier))
      (out_param
        type: (parameter_type
          (identifier))
        name: (identifier)))
    (call_stm
      name: (identifier)
      (binding_list
        (binding
          target: (binding_target
            (identifier))
          value: (expression
            (ref_exp
              (ref_list
                (identifier)))))))
    (call_stm
      name: (identifier)
      (binding_list
        (binding
          target: (binding_target
            (identifier))
          value: (expression
            (ref_exp
              (ref_list
                (id_list
                  (identifier)
                  (identifier))))))))
    (return_stm
      (binding_list
        (binding
          target: (binding_target
            (identifier))
          value: (expression
            (ref_exp
              (ref_list
                (id_list
                  (identifier)
                  (identifier))))))))))
