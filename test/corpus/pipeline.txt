================================================================================
Pipeline
================================================================================

filetype txt;

stage SORT_ITEMS(
    in  txt  unsorted,
    in  bool case_sensitive,
    out txt  sorted,
    src py   "stages/sort",
)

stage FIND_DUPLICATES(
    in  txt  sorted,
    out txt  duplicates,
    src py   "stages/find_duplicates",
)

pipeline DUPLICATE_FINDER(
    in  txt  unsorted,
    out txt  duplicates,
)
{
    call SORT_ITEMS(
        unsorted = self.unsorted,
    )
    call FIND_DUPLICATES(
        sorted = SORT_ITEMS.sorted,
    )
    return (
        duplicates = FIND_DUPLICATES.duplicates,
    )
}

--------------------------------------------------------------------------------

(source_file
  (filetype_declaration
  (filetype_declaration
    filetype: (identifier))
  (stage_definition
    name: (identifier)
    (parameter_list
      (input_parameter
        type: (parameter_type
          (identifier))
        name: (identifier))
      (input_parameter
        type: (parameter_type
          (primitive_type))
        name: (identifier))
      (output_parameter
        type: (parameter_type
          (identifier))
        name: (identifier)))
    (source_declaration
      type: (source_type)
      source_path: (string)))
  (stage_definition
    name: (identifier)
    (parameter_list
      (input_parameter
        type: (parameter_type
          (identifier))
        name: (identifier))
      (output_parameter
        type: (parameter_type
          (identifier))
        name: (identifier)))
    (source_declaration
      type: (source_type)
      source_path: (string)))
  (pipeline_definition
    name: (identifier)
    params: (parameter_list
      (input_parameter
        type: (parameter_type
          (identifier))
        name: (identifier))
      (output_parameter
        type: (parameter_type
          (identifier))
        name: (identifier)))
    calls: (call_statement_list
      (call_statement
        name: (identifier)
        params: (binding_list
          (binding
            target: (binding_target
              (identifier))
            value: (expression
              (reference_expression
                (reference_list
                  field: (identifier)))))))
      (call_statement
        name: (identifier)
        params: (binding_list
          (binding
            target: (binding_target
              (identifier))
            value: (expression
              (reference_expression
                (reference_list
                  (scoped_identifier
                    value: (identifier)
                    field: (identifier)))))))))
    (return_statement
      (binding_list
        (binding
          target: (binding_target
            (identifier))
          value: (expression
            (reference_expression
              (reference_list
                (scoped_identifier
                  value: (identifier)
                  field: (identifier))))))))))
