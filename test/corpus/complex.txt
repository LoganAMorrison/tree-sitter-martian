================================================================================
Complex
================================================================================

@include "pipeline.mro"

filetype txt;

stage STAGE1(
  in txt file,
  out txt outfile,
  src comp "comp",
)

stage STAGE2(
  in txt file,
  out float[] floats,
  src py "comp",
)

pipeline MY_PIPE(
  in txt file,
  out float[] floats,
)
{

  call STAGE1(
    file = self.file,
  )
  call STAGE2(
    file = STAGE1.file,
  )

  return(
    floats = STAGE2.floats,
  )

}

call MY_PIPE(
    file = "/home/duplicator_dave/unsorted.txt",
)

--------------------------------------------------------------------------------

(source_file
  (includes
    include: (string))
  (filetype_declaration
    filetype: (identifier))
  (stage_declaration
    name: (identifier)
    (stage_body
      (parameter_list
        (in_param
          type: (parameter_type
            (identifier))
          name: (identifier))
        (out_param
          type: (parameter_type
            (identifier))
          name: (identifier)))
      (src_stm
        type: (src_lang)
        source_path: (string))))
  (stage_declaration
    name: (identifier)
    (stage_body
      (parameter_list
        (in_param
          type: (parameter_type
            (identifier))
          name: (identifier))
        (out_param
          type: (parameter_type
            (array_type
              (parameter_type
                (primitive_type))))
          name: (identifier)))
      (src_stm
        type: (src_lang)
        source_path: (string))))
  (pipeline_declaration
    name: (identifier)
    parameters: (parameter_list
      (in_param
        type: (parameter_type
          (identifier))
        name: (identifier))
      (out_param
        type: (parameter_type
          (array_type
            (parameter_type
              (primitive_type))))
        name: (identifier)))
    (call_stm
      name: (identifier)
      (binding_list
        (binding
          target: (binding_target
            (identifier))
          value: (expression
            (ref_exp
              (ref_list
                (identifier)))))))
    (call_stm
      name: (identifier)
      (binding_list
        (binding
          target: (binding_target
            (identifier))
          value: (expression
            (ref_exp
              (ref_list
                (id_list
                  (identifier)
                  (identifier))))))))
    (return_stm
      (binding_list
        (binding
          target: (binding_target
            (identifier))
          value: (expression
            (ref_exp
              (ref_list
                (id_list
                  (identifier)
                  (identifier)))))))))
  (call_stm
    name: (identifier)
    (binding_list
      (binding
        target: (binding_target
          (identifier))
        value: (expression
          (string))))))
